[[inputs.cisco_telemetry_mdt]]
transport = "grpc"
service_address = "<IP>:<port>"
max_msg_size = 4000000
tags = {asset_type = "cisco_telemetry_metrics_out", input = "Telemetry"}

[[processors.rda_enrich]]
  dataset_name = "chassis_inventory"
  refresh_interval = "60s"
  enrich_column_defaults = ["Not Available"]
  dict_key_columns = ["device_hostname_short"]
  source_key_columns = ["source"]
  enrich_columns = ["device_ip"]
  enrich_columns_as = ["agent_host"]
  tagpass = { input = ["Telemetry"] }

[[processors.strings]]
  [[processors.strings.lowercase]]
  field_key = "*"

  [[processors.strings.lowercase]]
  measurement = "*"

  [[processors.strings.lowercase]]
  tag_key = "*"

  [[processors.strings.replace]]
  field_key = "*"
  old = "/"
  new = "_"

 [[processors.rename]]
  [[processors.rename.replace]]
    field = "state_avg"
    dest = "cpu_usage"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/cpu/utilization"
new = "cpu_utilization"


# For IOS XE
[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "cisco-ios-xe-process-cpu-oper:cpu-usage/cpu-utilization"
new = "cpu_utilization"

# For TG1100
 [[processors.rename]]
  namepass = ["cpu_utilization"]
  [[processors.rename.replace]]
    field = "instant"
    dest = "cpu_usage"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/fan/state"
new = "fan_state"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/power-supply/state"
new = "power_supply"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/state/temperature/instant"
new = "temperature"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-system:system/memory/state"
new = "memory_usage"

# For IOS XE
[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "cisco-ios-xe-memory-oper:memory-statistics/memory-statistic"
new = "memory_usage"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/state/oper-status"
new = "oper_status"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-interfaces:interfaces/interface/ethernet"
new = "interface"


# For IOS XE
[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "cisco-ios-xe-interfaces-oper:interfaces/interface/statistics"
new = "interface"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-interfaces:interfaces/interface/state"
new = "interface"

[[processors.strings]]
[[processors.strings.replace]]
namepass = ["interface"]
field_key = "*"
old = "counters_"
new = ""


[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/state/removable"
new = "fru_removable"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/state/type"
new = "state_type"


# For TG1100
[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/state/temperature"
new = "temperature"


#For TG1100
[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/state"
new = "state_type"


# For TG1100
[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-platform:components/component/cpu/openconfig-platform-cpu:utilization/state"
new = "cpu_utilization"


#For TG1100
[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "openconfig-interfaces:interfaces/interface/openconfig-if-ethernet:ethernet/state"
new = "interface"

 ## Creating a generic field cpu_usage for CPU metric

[[processors.starlark]]
  namepass = ["cpu_utilization"]
  source = '''
def apply(metric):
    # Check if the tag "name" is set to "ALL"
    if metric.tags.get("name") == "ALL":
       return metric  # Keep the metric

    return None  # Drop the metric
'''

[[processors.rename]]
  namepass = ["memory*"]  # only apply to memory measurements
  [[processors.rename.replace]]
    tag = "name"
    dest = "memory_pool_name"

[[processors.starlark]]
  namepass = ["memory_usage"]
  source = '''

def round(value, decimals):
    factor = 1
    for _ in range(decimals):
        factor *= 10
    return int(value * factor + 0.5) / factor

def apply(metric):
    # Ensure both mem_usage and mem_total are present
    memory_physical = metric.fields.get('physical', 0)
    memory_reserved = metric.fields.get('reserved', 0)
    memory_used = metric.fields.get('used', 0)
    memory_free = metric.fields.get('free', 0)

    # converting bytes to Mega bytes
    if memory_physical != 0:
        metric.fields['memory_physical_mb'] = round(memory_physical / 1048576, 2)
    if memory_reserved != 0:
        metric.fields['memory_reserved_mb'] = round(memory_reserved / 1048576, 2)
    if memory_used != 0:
        metric.fields['memory_used_mb'] = round(memory_used / 1048576, 2)
    if memory_free != 0:
        metric.fields['memory_free_mb'] = round(memory_free / 1048576, 2)

    return metric

'''

[[processors.starlark]]
  namepass = ["oper_status"]
  source = '''
def apply(metric):
    # new column for oper_status
    oper_status = metric.fields.get("oper_status", '')
    if oper_status == "ACTIVE":
        metric.fields['oper_status_value'] = 1
    if oper_status == "INACTIVE":
        metric.fields['oper_status_value'] = 0
    return metric
'''

# Removing unneccessary fields from interface metrics
[[processors.starlark]]
  namepass = ["interface"]
  source = '''
def apply(metric):
    allowed_fields = ['oper_status_label','in_octets', 'out_octets', 'admin_status', 'oper_status', 'name', 'type', 'mtu','in_discards','out_discards','in_errors','out_errors']
    for item in list(metric.fields.keys()):
        if item not in allowed_fields:
            metric.fields.pop(item, None)
    return metric
'''


# For ARS9K-3 (XR)
[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization"
new = "cpu_utilization"

[[processors.strings]]
[[processors.strings.replace]]
measurement = "*"
old = "process_cpu_process_"
new = ""

[[processors.rename]]
[[processors.rename.replace]]
field = "cpu_five_minute"
dest = "cpu_usage"
