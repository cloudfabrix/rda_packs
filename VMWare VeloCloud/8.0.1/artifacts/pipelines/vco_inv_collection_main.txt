%% stream = no and limit = 0
%%template_type="jinja"

@dm:empty
    --> @dm:save name = "temp-customer-context"

{% set row = "" %}

   {% if customer_tag %} 
      {% set customer_id = customer_id %}
      {% set customer_tag = customer_tag %}
      {% set customerTag = customer_tag %}
   {% elif customerTag %} 
      {% set customer_id = customer_id %}
      {% set customer_tag = customerTag %}
   {% else %}
   --> @c:new-block
    --> @dm:recall name = "temp-customer-context"
    ##--> @dm:skip-pipeline-if-shape row_count = 0
   {% endif %}   
   
-->@c:new-block
   --> @dm:empty
   {% if customer_tag %} 
      --> #dm:query-persistent-stream  customer_tag is '{{customer_tag}}' with-input name = "velocloud_on_boarded_devices" & limit = "0"
   {% else %}
      --> #dm:query-persistent-stream   customer_tag is 'None' or customer_tag is empty with-input name = "velocloud_on_boarded_devices" & limit = "0"
   {% endif %}   
   
   --> @dm:selectcolumns exclude="timestamp|RDA|count_"
   --> @dm:save name="temp-input-dataset"

##Add customer context to the input dataset
--> @c:new-block
    --> @dm:recall name = 'temp-input-dataset'
    --> @dm:eval customerId =  "'{{ customer_id }}'"
    --> @dm:eval customerTag =  "'{{ customer_tag }}'"
    --> @dm:eval projectId =  "'{{ customer_id }}'"
   --> @dm:save name = 'temp-input-dataset'


--> @c:flex-block
    --> @dm:empty
    --> @exec:define-function name = 'test-func'
       --> @exec:run-pipeline name="vco_inv_collection"
       ## @exec:run-pipeline name="vco_import_source"
       --> @exec:run-pipeline name="vco_gateway_and_edges_topology"
        ##--> @exec:run-pipeline name="test_velo"
    --> @exec:end-function

--> @c:new-block
    --> @dm:recall name="temp-input-dataset"
    --> @exec:run-pipeline name="vco_inv_collection"


