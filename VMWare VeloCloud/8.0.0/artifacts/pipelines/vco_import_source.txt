%% stream = no and limit = 0
%%template_type="jinja"
%% import_src_type = "velocloud-orchestrator"

%%start_inline_object name="context_dynamic_form" and type="data" and format="json"
{
    "formFieldList": [
        {
            "fieldId": "customer_tag",
            "label": "Tag of the customer",
            "required": false,
            "dataType": "string"
        }
    ]
}
%%end_inline_object


@dm:empty
    --> @dm:save name = "temp-customer-context"

{% set row = "" %}


   {% if customer_tag %}
      {% set customer_id = customer_id %}
      {% set customer_tag = customer_tag %}
      {% set customerTag = customer_tag %}
   {% elif customerTag %}
      {% set customer_id = customer_id %}
      {% set customer_tag = customerTag %}
   {% else %}
      {% set customer_id = '' %}
      {% set customer_tag = '' %}

   {% endif %}

--> @c:new-block
    --> @dm:empty
    --> @exec:get-input
    --> @dm:to-type columns="replace" and type="str"
    --> @dm:save name="temp-vco-input-dataset"


--> @c:new-block
    --> @dm:empty
    --> @exec:get-input
   ## --> @dm:save name="temp-input-devices"
   --> @dm:eval key ="'key'" 
   --> @dm:save name ="temp-input-data"
    --> @dm:save name ="temp-input-dataset"
     {% if customer_tag %} 
         --> @dm:save name="{{customer_tag}}-vco-import-devices"
    {% else %}
        --> @dm:save name="vco-import-devices"
    {% endif %}



--> @c:new-block
    {% if customer_tag %} 
         --> @dm:recall name="{{customer_tag}}-vco-import-devices"
    {% else %}
        --> @dm:recall name="vco-import-devices"
    {% endif %} 
    --> @dm:replace-data columns="fileUpload" and expr="'" and replace='"'
    --> @dm:to-type columns="replace" and type="str"
    --> @dm:explode-json column="fileUpload"
    --> @dm:save name ="temp-input-dataset"




--> @c:new-block
    --> @dm:empty
    {% if customer_tag %}
         --> #dm:query-persistent-stream type is 'velocloud-orchestrator' and customerTag is '{{customer_tag}}'
            with-input name = "rda_secrets_meta" & limit = "0"
    {% else %}
        --> #dm:query-persistent-stream type is 'velocloud-orchestrator' and customerTag is empty
            with-input name = "rda_secrets_meta" & limit = "0"
    {% endif %}
    --> @dm:save name="vco-dataset"
    --> @dm:skip-pipeline-if-shape row_count = 0
    --> @dm:eval discovery_scope="'yes'"
    --> *dm:filter * get name as 'vco_src_name',discovery_scope
    --> @dm:eval customer_tag = "'{{customer_tag}}'"
    --> @dm:eval customer_id = "'{{customer_id}}'"
    --> @dm:save name = 'temp-vco_inventory_source_info'




--> @c:new-block
    --> @dm:empty
    {% if customer_tag %}
         --> #dm:query-persistent-stream customer_tag is '{{customer_tag}}' with-input name = "velocloud_on_boarded_devices" & limit = "0"
    {% else %}
        --> #dm:query-persistent-stream customer_tag is empty with-input name = "velocloud_on_boarded_devices" & limit = "0"
    {% endif %}
    --> @dm:save name ="temp-onboarded-devices"
    --> @dm:save name ="temp-customer-old-data"




--> @c:data-loop dataset="temp-input-dataset" and columns="bucketName,objectName"
    --> @dm:recall name="temp-input-dataset"
    # --> @dm:to-type columns="replace" and type="str"
    --> *dm:filter replace=="True"
    --> @dm:skip-block-if-shape row_count=0
    --> @dm:get-from-location path="$bucketName/$objectName"
    --> *dm:filter vco_cred is not empty
    --> @dm:eval key ="'key'" 
     --> @dm:eval discovery_scope="'yes'"
    --> @dm:enrich dict = "temp-input-data" & src_key_cols = "key" & dict_key_cols="key" & enrich_cols = "customer_tag,customer_id"
    --> @rn:write-stream name="velocloud_on_boarded_devices"



--> @c:data-loop dataset="temp-input-dataset" and columns="bucketName,objectName"
    --> @dm:recall name="temp-input-dataset"
    # --> @dm:to-type columns="replace" and type="str"
    --> *dm:filter replace=="False"
    --> @dm:skip-block-if-shape row_count=0
    --> @dm:get-from-location path="$bucketName/$objectName"
    --> @dm:save name="temp-uploaded-file-data"
    --> @dm:recall name ="temp-customer-old-data"
    --> @dm:save name="temp-uploaded-file-data" and append= "yes"
    --> @dm:recall name="temp-uploaded-file-data"
    --> @dm:eval key ="'key'" 
    --> *dm:filter vco_cred is not empty
     --> @dm:eval discovery_scope="'yes'"
    --> @dm:enrich dict = "temp-input-data" & src_key_cols = "key" & dict_key_cols="key" & enrich_cols = "customer_tag,customer_id"
    --> @rn:write-stream name="velocloud_on_boarded_devices"


